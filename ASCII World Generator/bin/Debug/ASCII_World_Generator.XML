<?xml version="1.0" encoding="utf-8"?>
<doc>
<assembly><name>ASCII_World_Generator</name></assembly>
<members>
<member name="M:Erosion.erode(System.Double[0:,0:],System.Int32,System.Int32)">
<summary>
erodes a heightmap based on a given x y coordinate for rain cloud position
</summary>
</member>
<member name="M:Erosion.flowDirection(System.Int32,System.Int32,System.Double[0:,0:],System.Double[0:,0:])">
<summary>
checks which direction water should flow, or if it should stay still, and the amount of water that should flow
</summary>
</member>
<member name="M:Erosion.sum2D(System.Double[0:,0:])">
<summary>
sum of all values in a 2D array of floats
</summary>
</member>
<member name="M:Erosion.flooredDiff(System.Double,System.Double)">
<summary>
if the first value is less than the second, return 0.0, else return the first.
</summary>
</member>
<member name="P:Erosion.solubility">
<summary>
how much sediment a unit of water can hold, should be 0.1
</summary>
</member>
<member name="P:Erosion.evaporation">
<summary>
how much of the water evaporates per iteration in percentage, should be 0.6
</summary>
</member>
<member name="P:Erosion.rainDuration">
<summary>
how long a rain cloud rains, should be 120
</summary>
</member>
<member name="P:Erosion.rainSize">
<summary>
how large of a rain cloud there is, should be 1000
</summary>
</member>
<member name="P:Erosion.rainDensity">
<summary>
how much water per square of rain, should be 45
</summary>
</member>
<member name="T:Erosion">

</member>
<member name="M:Fractals.Terrain3D(System.Double,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
<summary>
creates 3d height map using midpoint displacement and diamond square algorithm
</summary>
</member>
<member name="M:Fractals.Terrain2D(System.Double,System.Int32,System.Int32,System.Int32,System.Int32)">
<summary>
H, depth, left, middle, right. returns an array of height values, where the middle index is the middle of the terrain. H is the roughness factor; depth is recursion depth, dealing with level of detail; leftInit, midInit, and rightInit are the initial values
</summary>
</member>
<member name="T:Fractals">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="F:Graphics.Graphics.scale">
<summary>
how stretched the heightmap is
</summary>
</member>
<member name="F:Graphics.Graphics.heightmap">
<summary>
global heightmap for testing
</summary>
</member>
<member name="F:Graphics.Graphics.range">
<summary>
range of random values possible, in +/-
</summary>
</member>
<member name="F:Graphics.Graphics.depth">
<summary>
how deep the recursive terrain generation goes, higher number means more detail
</summary>
</member>
<member name="F:Graphics.Graphics.H">
<summary>
roughness factor, lower is more rough, 0.45 to 0.65
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Graphics.Graphics">
<summary>
 Main program window.
</summary>
</member>
<member name="T:Graphics">

</member>
<member name="T:Program">

</member>
</members>
</doc>
